# Copyright (C) 2013-2019 Nicolas Lamirault <nicolas.lamirault@gmail.com>

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Check Golang installation
  command: which version
  register: go_installation
  changed_when: false
  ignore_errors: true
  check_mode: false

- name: Get installed Go version
  command: "{{ go_installation.stdout }} version"
  when: not go_installation is failed
  changed_when: false
  check_mode: false
  register: installed_go_version

- name: Go installation is required
  set_fact:
    go_installation_required: "{{ go_installation is failed or installed_go_version.stdout != go_version }}"

- name: Go installation
  when:
    - go_installation_required
  block:
    - name: Download Go archive
      get_url:
        url: "{{ go_linux_download_url }}"
        dest: "/tmp/{{ go_linux_package_name }}"
        mode: 0600
        checksum: "{{ go_linux_checksum }}"
        force: true

    - name: Install Go
      unarchive:
        src: "/tmp/{{ go_linux_package_name }}"
        dest: "{{ go_linux_dir }}"

- name: Check Rust installation
  command: which rustc
  register: rust_installation
  changed_when: false
  ignore_errors: true
  check_mode: false

- name: Get installed Rust version
  command: "{{ rust_installation.stdout }} --version"
  when: not rust_installation is failed
  changed_when: false
  check_mode: false
  register: installed_rust_version

- name: Rust installation is required
  set_fact:
    rust_installation_required: "{{ rust_installation is failed or installed_rust_version.stdout != rust_version }}"

- name: Download rustup installer
  get_url:
    url: https://sh.rustup.rs
    dest: /tmp/rustup.sh
    mode: 0755
  register: rustup_installer
  when: not("~/.cargo/bin/rustup" is exists)

- name: Rust installation
  when:
    - rust_installation_required
  block:
    - name: Install rustup
      command: /tmp/rustup.sh -y --no-modify-path
      args:
        creates: "{{ ansible_env.HOME }}/.cargo/bin/rustup"

    - name: rustup self update
      command: ~/.cargo/bin/rustup self update
      changed_when: false

    - name: download stable rust
      command: ~/.cargo/bin/rustup install stable
      changed_when: false

    - name: use stable rust
      command: ~/.cargo/bin/rustup default stable
      changed_when: false

    - name: update rust
      command: ~/.cargo/bin/rustup update
      changed_when: false
