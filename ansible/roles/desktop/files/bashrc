#
# Bash configuration
#

PATH=/usr/local/bin:/usr/bin:/bin:/sbin:/usr/bin/X11:/usr/sbin:/usr/lib/postgresql/bin/:/home/nlamirault/bin:/usr/games/:/usr/lib/openoffice/program/
export PATH

INFOPATH=/usr/local/info/:usr/info/:/usr/share/info/:/usr/share/info/emacs-21/:/home/nlamirault/info/
export INFOPATH

EDITOR=/usr/bin/vim
CVSEDITOR=/usr/bin/vim
export EDITOR CVSEDITOR

APPS=$HOME/Apps

# if [ -d "$HOME/.local/bin" ]; then
#     PATH="$HOME/.local/bin:$PATH"
# fi

export JAVA_HOME=$APPS/jdk1.6.0_26
export PATH=$PATH:$JAVA_HOME/bin

export MAVEN_1_HOME=$APPS/maven-1.1
export MAVEN_2_HOME=$APPS/apache-maven-2.2.1
export MAVEN_3_HOME=$APPS/apache-maven-3.0.3
export PATH=$PATH:$MAVEN_1_HOME/bin:$MAVEN_3_HOME/bin

export ANT_HOME=$APPS/apache-ant-1.8.2
export PATH=$PATH:$ANT_HOME/bin

export PATH="$HOME/.cask/bin:$PATH"
export PATH="$HOME/.evm/bin:$PATH"

export GOPATH=$HOME/Apps/golang
export PATH=$PATH:$GOPATH/bin
export PATH=$PATH:/usr/local/go/bin

export COLUMNS=250

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines in the history. See bash(1) for more options
# ... or force ignoredups and ignorespace
HISTCONTROL=ignoredups:ignorespace

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000
export HISTTIMEFORMAT="%h/%d - %H:%M:%S "

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# afficher l'etat du git
function parse_git_dirty {
  [[ $(git status 2> /dev/null | tail -n1) != "nothing to commit (working directory clean)" ]] && echo "*"
}
function parse_git_branch {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/ [\1$(parse_git_dirty)]/"
}
function display_profile {
	[ -n "${PROFILE:+x}" ] && echo "${PROFILE}";
}

# activer le nom de la branche git en vert
#PS1='\[\033[01;33m\][\h]\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\[\033[00;32m\]$(parse_git_branch)\[\033[00m\]\[\033[01;35m\]$(display_profile)\[\033[00m\]$ '

# PS1 Powerline-shell : https://github.com/milkbikis/powerline-shell
# function _update_ps1() {
#        export PS1="$($HOME/Apps/powerline-shell/powerline-shell.py $? 2> /dev/null)"
# }
# export PROMPT_COMMAND="_update_ps1; $PROMPT_COMMAND"

if [ -d "$HOME/.local/bin" ]; then
    PATH="$HOME/.local/bin:$PATH"
fi
if [ -f ~/.local/lib/python2.7/site-packages/powerline/bindings/bash/powerline.sh ]; then
    source ~/.local/lib/python2.7/site-packages/powerline/bindings/bash/powerline.sh
fi

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

alias ll='ls -alF'
alias la='ls -A'
alias l='ls -l'

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

if [ -f ~/.bash_perso ]; then
    . ~/.bash_perso
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

export TERM=xterm-256color
export GDK_NATIVE_WINDOWS=1
export PATH=$PATH:$JAVA_HOME/bin:$HOME/bin

if [ -f ~/.environmentrc ]; then
    . ~/.environmentrc
fi
if [ -f ~/.ubuntudevrc ]; then
    . ~/.ubuntudevrc
fi
