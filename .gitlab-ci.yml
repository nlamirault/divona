# Copyright (C) 2013-2017 Nicolas Lamirault <nicolas.lamirault@gmail.com>

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

stages:
  - check
  - build
  - debug
  - default
  - dev
  - iot
  - mobile

services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay
  ANSIBLE_VERSION: 2.4.0.0

check:ansible:
  stage: check
  image: python:2.7
  script:
    - pip install ansible ansible-lint
    - ansible --version
    - for i in $(find ansible/ -name "*.yml"); do echo $i; ansible-lint $i; done

build:archlinux:
  stage: build
  image: docker:git
  script:
    - docker login -u gitlab-ci-token -p "$CI_BUILD_TOKEN" "$CI_REGISTRY"
    - docker build -t "$CI_REGISTRY_IMAGE:archlinux" -f dockerfiles/Dockerfile.archlinux --build-arg ANSIBLE_VERSION=${ANSIBLE_VERSION} dockerfiles
    - docker push "$CI_REGISTRY_IMAGE:archlinux"
  only:
    - master
    - develop

build:debian:
  stage: build
  image: docker:git
  script:
    - docker login -u gitlab-ci-token -p "$CI_BUILD_TOKEN" "$CI_REGISTRY"
    - docker build -t "$CI_REGISTRY_IMAGE:debian" -f dockerfiles/Dockerfile.debian --build-arg ANSIBLE_VERSION=${ANSIBLE_VERSION} dockerfiles
    - docker push "$CI_REGISTRY_IMAGE:debian"
  only:
    - master
    - develop

build:centos:
  stage: build
  image: docker:git
  script:
    - docker login -u gitlab-ci-token -p "$CI_BUILD_TOKEN" "$CI_REGISTRY"
    - docker build -t "$CI_REGISTRY_IMAGE:centos" -f dockerfiles/Dockerfile.centos --build-arg ANSIBLE_VERSION=${ANSIBLE_VERSION} dockerfiles
    - docker push "$CI_REGISTRY_IMAGE:centos"
  only:
    - master
    - develop

debug:archlinux:
  stage: debug
  image: docker:git
  script:
    - docker login -u gitlab-ci-token -p "$CI_BUILD_TOKEN" "$CI_REGISTRY"
    - docker pull "$CI_REGISTRY_IMAGE:archlinux"
    - docker run --rm -i -v ~/.ssh/id_rsa:/root/.ssh/id_rsa -v ~/.ssh/id_rsa.pub:/root/.ssh/id_rsa.pub -v `pwd`/ansible:/ansible/playbooks "$CI_REGISTRY_IMAGE:archlinux" ansible-playbook -vvv -c local -i /ansible/playbooks/hosts/local /ansible/playbooks/debug.yml --extra-vars="user=root"
  only:
    - master
    - develop

debug:debian:
  stage: debug
  image: docker:git
  script:
    - docker login -u gitlab-ci-token -p "$CI_BUILD_TOKEN" "$CI_REGISTRY"
    - docker pull "$CI_REGISTRY_IMAGE:debian"
    - docker run --rm -i -v ~/.ssh/id_rsa:/root/.ssh/id_rsa -v ~/.ssh/id_rsa.pub:/root/.ssh/id_rsa.pub -v `pwd`/ansible:/ansible/playbooks "$CI_REGISTRY_IMAGE:debian" ansible-playbook -vvv -c local -i /ansible/playbooks/hosts/local /ansible/playbooks/debug.yml --extra-vars="user=root"
  only:
    - master
    - develop

debug:centos:
  stage: debug
  image: docker:git
  script:
    - docker login -u gitlab-ci-token -p "$CI_BUILD_TOKEN" "$CI_REGISTRY"
    - docker pull "$CI_REGISTRY_IMAGE:debian"
    - docker run --rm -i -v ~/.ssh/id_rsa:/root/.ssh/id_rsa -v ~/.ssh/id_rsa.pub:/root/.ssh/id_rsa.pub -v `pwd`/ansible:/ansible/playbooks "$CI_REGISTRY_IMAGE:centos" ansible-playbook -vvv -c local -i /ansible/playbooks/hosts/local /ansible/playbooks/debug.yml --extra-vars="user=root"
  only:
    - master
    - develop

default:archlinux:
  stage: default
  image: docker:git
  script:
    - docker login -u gitlab-ci-token -p "$CI_BUILD_TOKEN" "$CI_REGISTRY"
    - docker pull "$CI_REGISTRY_IMAGE:archlinux"
    - docker run --rm -i -v ~/.ssh/id_rsa:/root/.ssh/id_rsa -v ~/.ssh/id_rsa.pub:/root/.ssh/id_rsa.pub -v `pwd`/ansible:/ansible/playbooks "$CI_REGISTRY_IMAGE:archlinux" ansible-playbook -vvv -c local -i /ansible/playbooks/hosts/local /ansible/playbooks/divona.yml --extra-vars="user=root"
  only:
    - master
    - develop

default:debian:
  stage: default
  image: docker:git
  script:
    - docker login -u gitlab-ci-token -p "$CI_BUILD_TOKEN" "$CI_REGISTRY"
    - docker pull "$CI_REGISTRY_IMAGE:debian"
    - docker run --rm -i -v ~/.ssh/id_rsa:/root/.ssh/id_rsa -v ~/.ssh/id_rsa.pub:/root/.ssh/id_rsa.pub -v `pwd`/ansible:/ansible/playbooks "$CI_REGISTRY_IMAGE:debian" ansible-playbook -vvv -c local -i /ansible/playbooks/hosts/local /ansible/playbooks/divona.yml --extra-vars="user=root"
  only:
    - master
    - develop

default:centos:
  stage: default
  image: docker:git
  script:
    - docker login -u gitlab-ci-token -p "$CI_BUILD_TOKEN" "$CI_REGISTRY"
    - docker pull "$CI_REGISTRY_IMAGE:centos"
    - docker run --rm -i --cap-add=NET_ADMIN --cap-add SYS_ADMIN -v ~/.ssh/id_rsa:/root/.ssh/id_rsa -v ~/.ssh/id_rsa.pub:/root/.ssh/id_rsa.pub -v `pwd`/ansible:/ansible/playbooks "$CI_REGISTRY_IMAGE:centos" ansible-playbook -vvv -c local -i /ansible/playbooks/hosts/local /ansible/playbooks/divona.yml --extra-vars="user=root"
  only:
    - master
    - develop

dev:archlinux:
  stage: dev
  image: docker:git
  script:
    - docker login -u gitlab-ci-token -p "$CI_BUILD_TOKEN" "$CI_REGISTRY"
    - docker pull "$CI_REGISTRY_IMAGE:archlinux"
    - docker run --rm -i -v ~/.ssh/id_rsa:/root/.ssh/id_rsa -v ~/.ssh/id_rsa.pub:/root/.ssh/id_rsa.pub -v `pwd`/ansible:/ansible/playbooks "$CI_REGISTRY_IMAGE:archlinux" ansible-playbook -vvv -c local -i /ansible/playbooks/hosts/local /ansible/playbooks/dev.yml --extra-vars="user=root"
  only:
    - master
    - develop

dev:debian:
  stage: dev
  image: docker:git
  script:
    - docker login -u gitlab-ci-token -p "$CI_BUILD_TOKEN" "$CI_REGISTRY"
    - docker pull "$CI_REGISTRY_IMAGE:debian"
    - docker run --rm -i -v ~/.ssh/id_rsa:/root/.ssh/id_rsa -v ~/.ssh/id_rsa.pub:/root/.ssh/id_rsa.pub -v `pwd`/ansible:/ansible/playbooks "$CI_REGISTRY_IMAGE:debian" ansible-playbook -vvv -c local -i /ansible/playbooks/hosts/local /ansible/playbooks/dev.yml --extra-vars="user=root"
  only:
    - master
    - develop

dev:centos:
  stage: dev
  image: docker:git
  script:
    - docker login -u gitlab-ci-token -p "$CI_BUILD_TOKEN" "$CI_REGISTRY"
    - docker pull "$CI_REGISTRY_IMAGE:centos"
    - docker run --rm -i -v ~/.ssh/id_rsa:/root/.ssh/id_rsa -v ~/.ssh/id_rsa.pub:/root/.ssh/id_rsa.pub -v `pwd`/ansible:/ansible/playbooks "$CI_REGISTRY_IMAGE:centos" ansible-playbook -vvv -c local -i /ansible/playbooks/hosts/local /ansible/playbooks/dev.yml --extra-vars="user=root"
  only:
    - master
    - develop

iot:archlinux:
  stage: iot
  image: docker:git
  script:
    - docker login -u gitlab-ci-token -p "$CI_BUILD_TOKEN" "$CI_REGISTRY"
    - docker pull "$CI_REGISTRY_IMAGE:archlinux"
    - docker run --rm -i -v ~/.ssh/id_rsa:/root/.ssh/id_rsa -v ~/.ssh/id_rsa.pub:/root/.ssh/id_rsa.pub -v `pwd`/ansible:/ansible/playbooks "$CI_REGISTRY_IMAGE:archlinux" ansible-playbook -vvv -c local -i /ansible/playbooks/hosts/local /ansible/playbooks/iot.yml --extra-vars="user=root"
  only:
    - master
    - develop

iot:debian:
  stage: iot
  image: docker:git
  script:
    - docker login -u gitlab-ci-token -p "$CI_BUILD_TOKEN" "$CI_REGISTRY"
    - docker pull "$CI_REGISTRY_IMAGE:debian"
    - docker run --rm -i -v ~/.ssh/id_rsa:/root/.ssh/id_rsa -v ~/.ssh/id_rsa.pub:/root/.ssh/id_rsa.pub -v `pwd`/ansible:/ansible/playbooks "$CI_REGISTRY_IMAGE:debian" ansible-playbook -vvv -c local -i /ansible/playbooks/hosts/local /ansible/playbooks/iot.yml --extra-vars="user=root"
  only:
    - master
    - develop

iot:centos:
  stage: iot
  image: docker:git
  script:
    - docker login -u gitlab-ci-token -p "$CI_BUILD_TOKEN" "$CI_REGISTRY"
    - docker pull "$CI_REGISTRY_IMAGE:centos"
    - docker run --rm -i -v ~/.ssh/id_rsa:/root/.ssh/id_rsa -v ~/.ssh/id_rsa.pub:/root/.ssh/id_rsa.pub -v `pwd`/ansible:/ansible/playbooks "$CI_REGISTRY_IMAGE:centos" ansible-playbook -vvv -c local -i /ansible/playbooks/hosts/local /ansible/playbooks/iot.yml --extra-vars="user=root"
  only:
    - master
    - develop

mobile:archlinux:
  stage: mobile
  image: docker:git
  script:
    - docker login -u gitlab-ci-token -p "$CI_BUILD_TOKEN" "$CI_REGISTRY"
    - docker pull "$CI_REGISTRY_IMAGE:archlinux"
    - docker run --rm -i -v ~/.ssh/id_rsa:/root/.ssh/id_rsa -v ~/.ssh/id_rsa.pub:/root/.ssh/id_rsa.pub -v `pwd`/ansible:/ansible/playbooks "$CI_REGISTRY_IMAGE:archlinux" ansible-playbook -vvv -c local -i /ansible/playbooks/hosts/local /ansible/playbooks/mobile.yml --extra-vars="user=root"
  only:
    - master
    - develop

mobile:debian:
  stage: mobile
  image: docker:git
  script:
    - docker login -u gitlab-ci-token -p "$CI_BUILD_TOKEN" "$CI_REGISTRY"
    - docker pull "$CI_REGISTRY_IMAGE:debian"
    - docker run --rm -i -v ~/.ssh/id_rsa:/root/.ssh/id_rsa -v ~/.ssh/id_rsa.pub:/root/.ssh/id_rsa.pub -v `pwd`/ansible:/ansible/playbooks "$CI_REGISTRY_IMAGE:debian" ansible-playbook -vvv -c local -i /ansible/playbooks/hosts/local /ansible/playbooks/mobile.yml --extra-vars="user=root"
  only:
    - master
    - develop

mobile:centos:
  stage: mobile
  image: docker:git
  script:
    - docker login -u gitlab-ci-token -p "$CI_BUILD_TOKEN" "$CI_REGISTRY"
    - docker pull "$CI_REGISTRY_IMAGE:centos"
    - docker run --rm -i -v ~/.ssh/id_rsa:/root/.ssh/id_rsa -v ~/.ssh/id_rsa.pub:/root/.ssh/id_rsa.pub -v `pwd`/ansible:/ansible/playbooks "$CI_REGISTRY_IMAGE:centos" ansible-playbook -vvv -c local -i /ansible/playbooks/hosts/local /ansible/playbooks/mobile.yml --extra-vars="user=root"
  only:
    - master
    - develop
