# coding: utf-8
# -*- mode: ruby -*-
# vi: set ft=ruby :

# Copyright (C) 2013-2019 Nicolas Lamirault <nicolas.lamirault@gmail.com>

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

Vagrant.configure(2) do |config|

  # config.vm.box_url = "Microsoft/EdgeOnWindows10"
  # config.vm.box = "Microsoft/EdgeOnWindows10"
  config.vm.box = "Win7"
  config.vm.hostname = "Divona"

  config.vm.guest = :windows
  config.vm.communicator = "winrm"
  config.vm.boot_timeout = 600
  config.vm.graceful_halt_timeout = 600

  config.winrm.username = "IEUser"
  config.winrm.password = "Passw0rd!"
  config.winrm.transport = :ssl
  config.winrm.ssl_peer_verification = false

  # config.ssh.username = "IEUser"
  # config.ssh.password = "Passw0rd!"

  config.vm.network :private_network, :ip => '10.10.5.33'
  # config.vm.network :forwarded_port, guest: 22, host: 8122
  # config.vm.network :forwarded_port, guest: 5985, host: 5985, id: "winrm", auto_correct: true
  config.vm.network :forwarded_port, guest: 3389, host: 3389, id: "rdp", auto_correct: true

  config.vm.provider "virtualbox" do |vb|
    vb.gui = true
    vb.customize ["modifyvm", :id, "--memory", "1024"]
    vb.customize ["modifyvm", :id, "--vram", "128"]
    vb.customize ["modifyvm", :id,  "--cpus", "2"]
    # vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
    # vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    vb.customize ["guestproperty", "set", :id, "/VirtualBox/GuestAdd/VBoxService/--timesync-set-threshold", 10000]
    vb.name = "Divona"
  end

  # config.vm.provision "shell" do |s|
  #   # p = File.expand_path("../", __FILE__)
  #   # s.path = p + "/provision.ps1"
  #   s.path = "provision.ps1"
  # end

  config.vm.provision :ansible do |ansible|
    ansible.playbook = "../../ansible/divona.yml"
    ansible.inventory_path = "windows"
    ansible.limit = "all"
    ansible.verbose = 'vvvv'
    ansible.host_key_checking = false
  end

end
